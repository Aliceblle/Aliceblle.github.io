<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AliceBlog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-11-01T02:40:33.766Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Alice</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue学习笔记</title>
    <link href="http://example.com/2023/10/30/vue/"/>
    <id>http://example.com/2023/10/30/vue/</id>
    <published>2023-10-30T11:57:56.358Z</published>
    <updated>2023-11-01T02:40:33.766Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue学习笔记"><a href="#vue学习笔记" class="headerlink" title="vue学习笔记"></a>vue学习笔记</h1><h2 id="初识vue"><a href="#初识vue" class="headerlink" title="初识vue"></a>初识vue</h2><ul><li>想让vue工作，必须创建一个<strong>vue实例</strong>，且要传入一个配置对象；</li><li>root容器里的代码依然符号html规范，只不过混入一个特殊的vue语法</li><li>root容器里的代码被称为【vue模板】</li><li>真实开发中只有<strong>一个</strong>vue实例，并且会配合组件一起使用；</li><li>vue实例和容器是一一对应的</li><li>中的xxx要写js的表达式，且xxx可以自动读取到data中的所有属性；</li><li>一旦data中的数据发生改变，那么页面中用到的数据地方会自动更新 </li><li>注意区分js表达式和js代码（语句）<br>1.表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方<br>（1）a<br>（2）a+b<br>（3）demo（1）<br>（4）x&#x3D;&#x3D;&#x3D;y？‘a’：‘b’<br>2.js代码&#x2F;js语句<br>（1）if（）{}<br>（2）for（）{}</li></ul><pre><code class="html">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;初始vue&lt;/title&gt;    &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;!-- 准备好一个容器 --&gt;    &lt;div id=&quot;root&quot;&gt;        &lt;h1&gt;Hello,&#123;&#123;name&#125;&#125;，&#123;&#123;address&#125;&#125;&lt;/h1&gt;    &lt;/div&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        Vue.config.productionTip = false//设置为 false 以阻止 vue 在启动时生成生产提示        //创建vue实例        new Vue(&#123;            el: &#39;#root&#39;,//el用于指定当前vue实例为哪个容器服务，植通常为css选择器字符串。            data: &#123;//data用于存储数据，数据供el所指定的容器去使用，值我们暂时先写成一个对象                name: &#39;尚硅谷123&#39;,                address: &#39;深圳&#39;            &#125;        &#125;)    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="两类模板语法"><a href="#两类模板语法" class="headerlink" title="两类模板语法"></a>两类模板语法</h2><ul><li>插值语法：</li></ul><p>功能：用于解析标签体的内容</p><p>写法，xxx是js的表达式，且可以直接读取到data中的所有属性</p><ul><li>指令语法</li></ul><p>功能：用于解析标签（包括：标签属性，标签体内容，绑定事件。。。）</p><p>举例：v-bind：herf&#x3D;“xxx”或 简写为 ：herf&#x3D;“xxx”，xxx同样为js的表达式且可以直接读取到data中的所有属性。</p><p>备注：vue有很多指令，且都有v-…的形式</p><pre><code class="js">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;vue模板&lt;/title&gt;    &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;root&quot;&gt;        &lt;h1&gt;插值语法&lt;/h1&gt;        &lt;h3&gt;你好，&#123;&#123;name&#125;&#125;&lt;/h3&gt;        &lt;hr /&gt;        &lt;h1&gt;指令语法&lt;/h1&gt;        &lt;a v-bind:href=&quot;school.url.toUpperCase()&quot; x=&quot;hello&quot;&gt;点我去&#123;&#123;school.name&#125;&#125;学习2&lt;/a&gt;        &lt;a :href=&quot;school.url&quot; x=&quot;hello&quot;&gt;点我去&#123;&#123;school.name&#125;&#125;学习1&lt;/a&gt;    &lt;/div&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        Vue.config.productionTip = false        new Vue(&#123;            el: &#39;#root&#39;,            data: &#123;                name: &#39;jack&#39;,                school: &#123;                    name: &#39;尚硅谷&#39;,                    url: &#39;http://www.atguigu.com&#39;,                &#125;            &#125;        &#125;)    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="数据绑定-2种方式"><a href="#数据绑定-2种方式" class="headerlink" title="数据绑定-2种方式"></a>数据绑定-2种方式</h2><p>1，单项数据绑定 v-bind<br>数据只能从data里面流向页面<br><img src="/pic/vue_1.png" alt="v-bind" title="v-bind"><br>2，双向数据绑定 v-model<br>数据不仅能从data流向页面，还可以从页面流向data</p><p>备注：：<br>1，双向绑定一般都引用在表单类元素上（如：input，select等）<br>2，v-model：value可以简写为v-model，因为v-model默认收集的就是value的值<br><img src="/pic/vue_2.png" alt="v-model" title="v-model"><br>3.v-bind：value简写为：value<br>4. v-model :value&#x3D;”name简写为v-model&#x3D;”name”</p><pre><code class="js">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;    &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;!-- 准备好一个容器 --&gt;    &lt;div id=&quot;root&quot;&gt;        单项数据绑定：&lt;input type=&quot;text&quot; :value=&quot;name&quot;&gt;&lt;br /&gt;        双项数据绑定：&lt;input type=&quot;text&quot; v-model:value=&quot;name&quot;&gt;&lt;br /&gt;           &lt;/div&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        Vue.config.productionTip = false//设置为 false 以阻止 vue 在启动时生成生产提示        new Vue(&#123;            el: &#39;#root&#39;,            data: &#123;                name: &#39;尚硅谷&#39;            &#125;        &#125;)    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="el和data的两种写法"><a href="#el和data的两种写法" class="headerlink" title="el和data的两种写法"></a>el和data的两种写法</h2><p>1，el的两种写法<br>（1）new Vue时候配置el属性。<br>（2）先创建Vue实例，随后再通过vm.$mount（‘#root’）指定el的值。<br>2，data有两种写法<br>（1）对象式<br>（2）函数式<br>如何选择：组件时必须使用函数式<br>3.重要原则<br>由vue管理的函数，一定不能写箭头函数，一旦写了箭头函数，this就不是vue实例了</p><pre><code class="js">&lt;body&gt;    &lt;!-- 准备好一个容器 --&gt;    &lt;div id=&quot;root&quot;&gt;&lt;h1&gt;你好，&#123;&#123;name&#125;&#125;&lt;/h1&gt;    &lt;/div&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        Vue.config.productionTip = false//设置为 false 以阻止 vue 在启动时生成生产提示//el的两种写法const v = new Vue(&#123;    el:&#39;#root&#39;,//第一种    data:&#123;        name:&#39;shangguigu&#39;    &#125;&#125;)console.log(v)v.$mount(&#39;#root&#39;)//第二种    &lt;/script&gt;&lt;/body&gt;</code></pre><h2 id="MVVM模型"><a href="#MVVM模型" class="headerlink" title="MVVM模型"></a>MVVM模型</h2><p>MVVM模型<br>1，M：模型model，data中的数据<br>2，V：视图view，模板代码<br>3，VM：视图模型viewmodel，vue实例<br>观察发现<br>1，data上的说有属性，最后都出现在vm上<br>2，vm身上的所有属性，以及vue原型上的说有属性，在vue模板中都可以直接使用</p><pre><code class="js">&lt;body&gt;    &lt;!-- 准备好一个容器 --&gt;    &lt;div id=&quot;root&quot;&gt;        &lt;h1&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h1&gt;        &lt;h1&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h1&gt;        &lt;h1&gt;测试一下：&#123;&#123;_c&#125;&#125;&lt;/h1&gt;    &lt;/div&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        Vue.config.productionTip = false//设置为 false 以阻止 vue 在启动时生成生产提示        const vm = new Vue(&#123;            el: &#39;#root&#39;,            data: &#123;                name: &#39;尚硅谷&#39;,                address: &#39;beijing&#39;,                a: 1            &#125;        &#125;)        console.log(vm);    &lt;/script&gt;</code></pre><p><img src="/pic/vue_3.png" alt="MVVM" title="MVVM"></p><h2 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h2><p>1，vue中的数据代理<br>通过vm对象来代理data对象中属性的操作（读&#x2F;写）<br>2，基本原理<br>通过object。defineProperty()把对象中所有属性添加到vm上<br>为每一个添加到vm上的属性，都指定一个getter&#x2F;setter<br>在getter&#x2F;setter内部去操作（读&#x2F;写）data中对应的属性<br><img src="/pic/vue_4.png" alt="数据代理" title="数据代理"><br><img src="/pic/vue_5.png" alt="MVVM" title="数据代理"></p><pre><code class="js">1，    &lt;script type=&quot;text/javascript&quot;&gt;        Vue.config.productionTip = false//设置为 false 以阻止 vue 在启动时生成生产提示        let number = 18        let person = &#123;            name: &#39;张三&#39;,            sex: &#39;男&#39;,        &#125;        Object.defineProperty(person, &#39;age&#39;, &#123;            value: 18,            enumerable: true,            writable: true,            configurable: true,            get() &#123;                console.log(&#39;有人读取了age属性了&#39;)                return number            &#125;,            set() &#123;                console.log(&#39;有人修改了age属性，且值式&#39;, value);                number = value            &#125;        &#125;)    &lt;/script&gt;2， &lt;!-- 数据代理：通过一个对象代理对另一个对象中的属性的操作 --&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        Vue.config.productionTip = false//设置为 false 以阻止 vue 在启动时生成生产提示        let obj = &#123; x: 100 &#125;        let obj2 = &#123; y: 200 &#125;        Object.defineProperty(obj2, &#39;x&#39;, &#123;            get() &#123;                return obj.x            &#125;,            set(value) &#123;                obj.x = value            &#125;        &#125;)    &lt;/script&gt;3，&lt;body&gt;    &lt;div id=&quot;root&quot;&gt;        &lt;h2&gt;学校名称:&#123;&#123;name&#125;&#125;&lt;/h2&gt;        &lt;h2&gt;学校地址:&#123;&#123;address&#125;&#125;&lt;/h2&gt;    &lt;/div&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        Vue.config.productionTip = false        const vm = new Vue(&#123;            el: &#39;#root&#39;,            data: &#123;                name: &#39;atguigu&#39;,                address: &#39;jkdjhg&#39;            &#125;        &#125;)    &lt;/script&gt;&lt;/body&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vue学习笔记&quot;&gt;&lt;a href=&quot;#vue学习笔记&quot; class=&quot;headerlink&quot; title=&quot;vue学习笔记&quot;&gt;&lt;/a&gt;vue学习笔记&lt;/h1&gt;&lt;h2 id=&quot;初识vue&quot;&gt;&lt;a href=&quot;#初识vue&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="web前端" scheme="http://example.com/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue" scheme="http://example.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Web前端篇（1）</title>
    <link href="http://example.com/2023/10/27/study/"/>
    <id>http://example.com/2023/10/27/study/</id>
    <published>2023-10-27T05:08:02.221Z</published>
    <updated>2023-11-01T02:40:34.532Z</updated>
    
    <content type="html"><![CDATA[<p>嗨~这里是在网上找到的一些资料或者b站视频后整理的一些知识点，接下来会不断更新…<br>…</p><h3 id="css高频"><a href="#css高频" class="headerlink" title="css高频"></a>css高频</h3><h4 id="快速居中对齐的方式有："><a href="#快速居中对齐的方式有：" class="headerlink" title="快速居中对齐的方式有："></a>快速居中对齐的方式有：</h4><pre><code class="html">&lt;style&gt;.box&#123;display：flex；margin：auto;&#125;&lt;/style&gt;</code></pre><h4 id="margin和padding有什么不同？"><a href="#margin和padding有什么不同？" class="headerlink" title="margin和padding有什么不同？"></a>margin和padding有什么不同？</h4><p>padding是内边距，是作用于自身的，而margin是作用于外部的</p><h4 id="vw和百分比的区别？"><a href="#vw和百分比的区别？" class="headerlink" title="vw和百分比的区别？"></a>vw和百分比的区别？</h4><p>百分比有继承关系<br>vw不管父级，只和视口有关</p><h4 id="行内块级元素"><a href="#行内块级元素" class="headerlink" title="行内块级元素"></a>行内块级元素</h4><p>行内元素不换行，不设置大小，大小由内容决定</p><h6 id="如何让谷歌浏览器支持小字体？"><a href="#如何让谷歌浏览器支持小字体？" class="headerlink" title="如何让谷歌浏览器支持小字体？"></a>如何让谷歌浏览器支持小字体？</h6><p>通过缩放把他字体改成多少倍</p><pre><code class="css">.box&#123;transform：scale(0.8)-webkit-transform:scale(0.8)&#125;</code></pre><h3 id="js高频"><a href="#js高频" class="headerlink" title="js高频"></a>js高频</h3><h4 id="let和var"><a href="#let和var" class="headerlink" title="let和var"></a>let和var</h4><p> -Var<br>1）声明提升：先用后定义，无报错（（先上车后买票<br>2）没有局部作用域：在for循环之外仍可以（（红杏出墙<br>3）声明覆盖：同一个变量名被二次定义后，前面那个会被覆盖（let不行（（套牌车</p><h4 id="深拷贝与浅拷贝"><a href="#深拷贝与浅拷贝" class="headerlink" title="深拷贝与浅拷贝"></a>深拷贝与浅拷贝</h4><p>基本数据类型没有深浅拷贝之说，一定要讲<strong>基本数据类型</strong>就是是<strong>深拷贝</strong></p><pre><code class="js">let a=5;let b=a;b=3;console.log(a,b)</code></pre><h4 id="下面这种newArr会不会改变arr"><a href="#下面这种newArr会不会改变arr" class="headerlink" title="下面这种newArr会不会改变arr?"></a>下面这种newArr会不会改变arr?</h4><pre><code class="js">let arr = [1,2,3];let newArr =[...arr];newArr.push(4);console.log(arr, newArr)</code></pre><p><strong>会！浅拷贝</strong><br>数组与对象的赋值都叫做浅拷贝</p><h4 id="数组与对象的赋值都叫做浅拷贝"><a href="#数组与对象的赋值都叫做浅拷贝" class="headerlink" title="数组与对象的赋值都叫做浅拷贝??"></a>数组与对象的赋值都叫做浅拷贝??</h4><pre><code class="JS">let arr2 = [[1,2,3], [4, 5, 6]];let newArr2 = [...arr2];newArr2[0].push(888);console.log(arr2, newArr2)</code></pre><p><strong>不会！解构赋值深拷贝</strong><br>解构赋值如果针对一维数组和对象，是深拷贝。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;嗨~这里是在网上找到的一些资料或者b站视频后整理的一些知识点，接下来会不断更新…&lt;br&gt;…&lt;/p&gt;
&lt;h3 id=&quot;css高频&quot;&gt;&lt;a href=&quot;#css高频&quot; class=&quot;headerlink&quot; title=&quot;css高频&quot;&gt;&lt;/a&gt;css高频&lt;/h3&gt;&lt;h4 id=&quot;</summary>
      
    
    
    
    <category term="web前端" scheme="http://example.com/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="css" scheme="http://example.com/tags/css/"/>
    
    <category term="js" scheme="http://example.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Alice&#39;s First Blog</title>
    <link href="http://example.com/2023/10/26/firstBlog/"/>
    <id>http://example.com/2023/10/26/firstBlog/</id>
    <published>2023-10-26T14:20:39.271Z</published>
    <updated>2023-11-01T02:40:32.518Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎你来到我的博客网站！这是我的一方小天地呀~</p><p>这里将会记录我的学习和知识…</p><h3 id="搭建bolg资料和网站"><a href="#搭建bolg资料和网站" class="headerlink" title="搭建bolg资料和网站"></a>搭建bolg资料和网站</h3><p>在线md： <a href="https://pandao.github.io/editor.md/">https://pandao.github.io/editor.md/</a><br>Butterfly 主题的详细配置：<br><a href="https://liangshenglei.github.io/2023/03/06/Butterfly%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/index.html">https://liangshenglei.github.io/2023/03/06/Butterfly%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/index.html</a><br>背景：<br>1.Hexo-Butterfly主题优化-设置网站首页显示背景、文章最上方不显示背景 <a href="https://blog.csdn.net/zzq0523/article/details/122954271">https://blog.csdn.net/zzq0523/article/details/122954271</a><br>2. Butterfly主题优化首页大图加载效果 <a href="http://demian.wang/2021/06/05/Butterfly%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E9%A6%96%E9%A1%B5%E5%A4%A7%E5%9B%BE%E5%8A%A0%E8%BD%BD%E6%95%88%E6%9E%9C/">http://demian.wang/2021/06/05/Butterfly%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E9%A6%96%E9%A1%B5%E5%A4%A7%E5%9B%BE%E5%8A%A0%E8%BD%BD%E6%95%88%E6%9E%9C/</a></p><p>分类以及标签页<br>1.Hexo使用攻略-添加分类及标签<a href="https://www.jianshu.com/p/e17711e44e00">https://www.jianshu.com/p/e17711e44e00</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;欢迎你来到我的博客网站！这是我的一方小天地呀~&lt;/p&gt;
&lt;p&gt;这里将会记录我的学习和知识…&lt;/p&gt;
&lt;h3 id=&quot;搭建bolg资料和网站&quot;&gt;&lt;a href=&quot;#搭建bolg资料和网站&quot; class=&quot;headerlink&quot; title=&quot;搭建bolg资料和网站&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="web前端" scheme="http://example.com/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>hexo的基础配置</title>
    <link href="http://example.com/2023/10/26/hello-world/"/>
    <id>http://example.com/2023/10/26/hello-world/</id>
    <published>2023-10-26T11:42:54.873Z</published>
    <updated>2023-10-30T08:49:37.437Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
